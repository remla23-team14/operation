modelService:
  # The image tag of the model service.
  version: latest

  # The port for the model service.
  port: 8080

  # Whether to enable the metrics endpoint.
  metrics:
    enabled: true

  # The number of replicas for the model service.
  replicas: 1

  localModel:
    # Whether to enable a volume mapping for the model files.
    enabled: false

    # The absolute path for the vectorizer (.pkl) file.
    # Note: if you are using minikube, this path is in the minikube container!
    vectorizerPath: ''

    # The absolute path for the model file.
    # Note: if you are using minikube, this path is in the minikube container!
    modelPath: ''

app:
  # The port for the app.
  port: 8080

  # Whether to enable the metrics endpoint.
  metrics:
    enabled: true
    port: 9091

  variants:
    - name: app1
      # The image tag of the app.
      version: latest

      # The number of replicas for the app.
      replicas: 1

      weight: 10


    - name: app2
      # The image tag of the app.
      version: latest

      # The number of replicas for the app.
      replicas: 1

      weight: 90

appRateLimiter:
  # Whether to enable the rate limiter.
  enabled: true

  # The maximum number of request in at most the fill interval.
  maxNumberOfRequests: 10

  # The number of request replenished each fill interval.
  replenishAmount: 10

  # The fill interval.
  replenishTime: 60s

prometheus:
  # Whether to enable prometheus.
  enabled: true

  # The hostname for prometheus to filter by in the ingress controller.
  host: 'prometheus.local'

  # The port for prometheus.
  port: 9090

grafana:
  # Whether to enable grafana. Note: this also enables prometheus.
  enabled: true

  # The hostname for grafana to filter by in the ingress controller.
  host: 'grafana.local'

  # The port for grafana.
  port: 3000

  # Whether we should include the default Istio dashboards
  istioDefaultDashboards: true

kube-prometheus-stack:
  alertmanager:
    config:
      receivers:
        - name: 'null'
        - name: 'webhook'
          webhook_configs:
            - url: '' # change to your webhook url
      route:
        routes:
          - receiver: 'null' # change to 'webhook' to enable webhook
            matchers:
              - severity = page

jaeger:
  # Whether to enable jaeger.
  enabled: true

kiali:
  # Whether to enable kiali.
  enabled: true
